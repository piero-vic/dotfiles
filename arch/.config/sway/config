# Defaults
exec brightnessctl -q set 270     # Set brightness to 15%
exec mako

### Style
font pango: "JetBrainsMonoNerdFont" Regular 9
default_border pixel 2
titlebar_border_thickness 2
hide_edge_borders smart

## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #7aa2f7 #414868 #c0caf5 #7dcfff   #7aa2f7
client.focused_inactive #7aa2f7 #414868 #c0caf5 #7dcfff   #7aa2f7
client.unfocused        #414868 #24283b #a9b1d6 #7dcfff   #414868
client.urgent           #e0af68 #e0af68 #1d202f #7dcfff   #e0af68

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred web browser
set $browser firefox
# Your preferred application launcher
set $menu wofi

### Output configuration
# Wallpaper
output * bg ~/.local/share/wallpapers/pexels-photo-collections-213803.jpg fill

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
    timeout 300 'swaylock -f' \
    timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -f'

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# Trackpad
input "1452:594:bcm5974" {
    dwt enabled                 #Disable while typing
    tap enabled                 #Tap registers as a click
    accel_profile flat          #adaptive/flat cursor acceleration
    pointer_accel 0             #From -1 to 1: Speed of cursor
    natural_scroll enabled      #Direction of Scroll
    # scroll_factor 1             #Speed of Scrolling gets multiplied by this factor
    scroll_method two_finger    #none|two_finger|edge|on_button_down
    # middle_emulation enabled    #Enables middle click
    tap_button_map lmr          #1Finger > Left Click , 2Finger > Right Click, 3Fingers > MiddleClick
}

# Keyboard
input "1452:594:Apple_Inc._Apple_Internal_Keyboard_/_Trackpad" {
    repeat_rate 30
    repeat_delay 350
    xkb_options caps:escape_shifted_capslock,grp:win_space_toggle
}

### Key bindings
# Basics:
    # Start a terminal
    bindsym $mod+Return exec $term

    # Start a browser
    bindsym $mod+i exec $browser

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec wlogout

# Function Keys:
    # Brightness controls
    bindsym --locked XF86MonBrightnessDown exec brightnessctl -q set 5%- && notify-send " Screen" "Brightness: $(light)%"
    bindsym --locked XF86MonBrightnessUp exec brightnessctl -q set +5% && notify-send " Screen" "Brightness: $(light)%"

    # Keyboard brightness controls
    bindsym XF86KbdBrightnessDown exec brightnessctl --device='smc::kbd_backlight' -q set 5%- && notify-send " Keyboard" "Brightness: $(light -s sysfs/leds/smc::kbd_backlight)%"
    bindsym XF86KbdBrightnessUp exec brightnessctl --device='smc::kbd_backlight' -q set +5% && notify-send " Keyboard" "Brightness: $(light -s sysfs/leds/smc::kbd_backlight)%"

    # Audio controls
    bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle
    bindsym XF86AudioLowerVolume exec sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 -5%"
    bindsym XF86AudioRaiseVolume exec sh -c "pactl set-sink-mute 0 false ; pactl set-sink-volume 0 +5%"

# Moving around:
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

# Layout stuff:
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Status Bar:
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
